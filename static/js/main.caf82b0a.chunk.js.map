{"version":3,"sources":["components/Section/Section.js","components/Form/Form.js","components/Contact/Contact.js","components/Contact/ContactsFilter.js","App.js","index.js"],"names":["Section","title","children","Form","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","required","Component","Contact","contacts","map","id","ContactsFilter","App","arrContacts","filter","addContact","contact","uuidv4","alert","find","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","sort","a","b","localeCompare","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf82b0a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // const { name, value } = e.target;\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ contacts }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <span>{name}:</span>\r\n          <span>{number}</span>\r\n\r\n          <button type=\"button\">Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ContactsFilter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Filter contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nContactsFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport Contact from './components/Contact';\nimport ContactsFilter from './components/Contact/ContactsFilter';\n\nimport arrContacts from './data/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: arrContacts,\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const alert = 'is already in contacts';\n\n    contacts.find((contact) => contact.name === name)\n      ? alert(`${name} ${alert}`)\n      : contacts.find((contact) => contact.number === number)\n      ? alert(`${number} ${alert}`)\n      : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  changeFilter = (e) => {\n    this.state({ filter: e.target.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase;\n\n    return contacts\n      .filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      )\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  render() {\n    const { contacts } = this.state;\n    const { filter } = this.state;\n    // const visibleContacts = this.filterContacts();\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <Form onSubmit={this.addContact} />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <ContactsFilter value={filter} onChange={this.changeFilter} />\n          <Contact contacts={contacts} />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import ReactDom from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport React from 'react';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}